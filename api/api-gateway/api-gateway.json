{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "ApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Azcard API Gateway",
        "Description": "The API Gateway for Azcard",
        "FailOnWarnings": true
      }
    },
    "ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::ImportValue": "ApiGatewayCloudWatchLogsRoleArn"
        }
      }
    },
    "CreateIakResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGateway",
            "RootResourceId"
          ]
        },
        "PathPart": "iak"
      }
    },
    "CreateIakTestStageLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": "arn:aws:lambda:eu-west-2:553201512970:function:create-iak:test",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "CreateIakProdStageLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": "arn:aws:lambda:eu-west-2:553201512970:function:create-iak:prod",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "CreateIakRequest": {
      "DependsOn": [
        "CreateIakTestStageLambdaPermission",
        "CreateIakProdStageLambdaPermission"
      ],
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::ImportValue": "CreateIakLambdaArn"
                },
                ":${stageVariables.LambdaAlias}",
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "CreateIakResource"
        },
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "RequestIakResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGateway",
            "RootResourceId"
          ]
        },
        "PathPart": "requestiak"
      }
    },
    "RequestIakTestStageLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": "arn:aws:lambda:eu-west-2:553201512970:function:request-iak:test",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "RequestIakProdStageLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": "arn:aws:lambda:eu-west-2:553201512970:function:request-iak:prod",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "RequestIakRequest": {
      "DependsOn": [
        "RequestIakTestStageLambdaPermission",
        "RequestIakProdStageLambdaPermission"
      ],
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::ImportValue": "RequestIakLambdaArn"
                },
                ":${stageVariables.LambdaAlias}",
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "RequestIakResource"
        },
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "ApiGatewayTestStage": {
      "DependsOn": [
        "ApiGatewayAccount",
        "CreateIakRequest",
        "RequestIakRequest"
      ],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "Description": "The test stage for the API Gateway",
        "DeploymentId": {
          "Ref": "ApiDeployment"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "MetricsEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "StageName": "test",
        "Variables": {
          "LambdaAlias": "test"
        }
      }
    },
    "ApiGatewayProdStage": {
      "DependsOn": [
        "ApiGatewayAccount",
        "CreateIakRequest",
        "RequestIakRequest"
      ],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "Description": "The production stage for the API Gateway",
        "DeploymentId": {
          "Ref": "ApiDeployment"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "MetricsEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "StageName": "prod",
        "Variables": {
          "LambdaAlias": "prod"
        }
      }
    },
    "ApiDeployment": {
      "DependsOn": [
        "CreateIakRequest",
        "RequestIakRequest"
      ],
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "Creates an API Gateway deployment",
        "RestApiId": {
          "Ref": "ApiGateway"
        }
      }
    }
  },
  "Outputs": {
    "ApiGateway": {
      "Description": "The ID of this API Gateway",
      "Value": {
        "Ref": "ApiGateway"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GatewayID"
        }
      }
    },
    "RootResourceId": {
      "Description": "The ID of the root resource for this API gateway",
      "Value": {
        "Fn::GetAtt": [
          "ApiGateway",
          "RootResourceId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-RootResourceID"
        }
      }
    }
  }
}
